<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="  
            http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
            http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-3.0.xsd  
            http://www.springframework.org/schema/jee 
            http://www.springframework.org/schema/jee/spring-jee-3.0.xsd  
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd" >
	<!-- Spring缓存机制配置 -->
	
	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
                     p:name="personCache" />
            </set>
        </property>
 </bean>
 <cache:annotation-driven />
 
	
	
	
	<!-- 配置监听类 -->
	<bean id="redisMsgListener" class="test3.RedisMessageListener">
		<property name="redisTemplate" ref="redisTemplate"/>
	</bean>
	
	<!-- 配置监听容器 -->
	<!-- 配置线程池：这个线程池会持续的生存以等待消息的传入
		 配置redisMsgListener对chat进行监听 
	 -->
	<bean id="topicContainer" class="org.springframework.data.redis.listener.RedisMessageListenerContainer"
		destroy-method="destroy">
		<!-- Redis连接工厂 -->
		<property name="connectionFactory" ref="connectionFactory"/>
		<!-- 配置连接池 -->
		<property name="taskExecutor">
			<bean class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler">
				<property name="poolSize" value="3"/>
			</bean>
		</property>
		<!-- 消息监听Map -->
			<property name="messageListeners">
				<map>
					<!-- 配置监听者 -->
					<entry key-ref = "redisMsgListener">
				 		<!-- 监听类 -->
						<bean class="org.springframework.data.redis.listener.ChannelTopic">
							<constructor-arg value="chat"/>
						</bean>
					</entry>
				</map>
			</property>
	</bean>
	
	
	<!-- 配置连接池 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- 最大空闲数 -->
		<property name="maxIdle" value="50"></property>
		<!-- 最大连接数 -->
		<property name="maxTotal" value="100"></property>
		<!-- 最大等待时间 -->
		<property name="maxWaitMillis" value="20000"></property>
	</bean> 
	
	 
	 <!-- Redis连接工厂 -->
	 <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
	 	<property name="hostName" value="localhost"/>
	 	<property name="port" value="6379"/>
	 	<property name="poolConfig" ref="poolConfig"/>
	 </bean>
	 
	<!-- 配置序列化器 -->
	<bean id="jdkSerializationRedisSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
	<bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
	 	
	<!-- 配置RedisTemplate
		1:配置工厂接口
		2:配置键序列化器
		3:配置值序列化器
	 -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<!-- 设置默认的序列化器 -->
		<property name="defaultSerializer" ref="stringRedisSerializer"/>
		<property name="connectionFactory" ref="connectionFactory"></property>
		<property name="keySerializer" ref="stringRedisSerializer"></property>
		<property name="valueSerializer" ref="jdkSerializationRedisSerializer"></property>
	</bean>
	
</beans> 