package leetcode;

/**
 * @ClassName : Demo
 * @Author : yq
 * @Date: 2020-09-30
 * @Description : 算法总结
 */
public class Demo {

    /**
     * 动态规划：将一个问题分解成若干个子问题，先求解子问题，然后从子问题的解中得到原问题的解，但是子问题往往不是相互独立的
     * 1.连续数组最大值
     * 2.隔离一个数值获取最大值
     * 3.斐切那波数列
     * 4.两步楼梯与三步楼梯的区别
     * 5.二维数组路径问题：从左上角到右下角最值及走过的路径等等
     */


    /**
     * 双指针法：
     * 前后指针进行覆盖
     * 前后指针进行删除
     * Floyd(龟兔赛跑法，判圈算法)
     *
     * 快慢指针法：一个指针每次走一步，另一个指针每次走两步，如果相遇则存在环
     * 可以判断链表是否存在环
     * 找出相同的元素
     *
     * 双指针哑节点问题
     */

    /**
     * 前后指针法：
     *
     *
     */


    /**
     * 二分查找法：结束条件以及结束时取值问题
     */

    /**
     * 回溯法：
     */


    /**
     * 摩尔投票法：
     */


    /**
     * 哈希：
     *
     * 1.和为k的子数组
     * 2.和可整除K的子数组
     */


    /**
     * 深度优先遍历：
     */


    /**
     * 数组：
     * 矩阵的转置，旋转
     * 辅助数组法
     * 数组的深拷贝
     */

}
